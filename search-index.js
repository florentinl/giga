var searchIndex = new Map(JSON.parse('[\
["giga",{"doc":"GIGA","t":"CHPPFPPPGPPGPPPPQNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNONNNNNCCNNNNNNNNNNNNNCOGPPPPPPPPPPPNNNNNNNNNNNNNNNNNNJHHFKNNMNNMMMMNONMNNOMOMCNNNSSFNNNNNNNNNNNNNNNNNNQONNNNKFNNONMNMNNNMNNMNCOMNMNMNNNMNMNONMNMNNMNNNMNMNMNHOONNNNOKFNNOMNMNNNMNNOONMNMNMNCNMNNMNMNMNMNNNNNOPPPFFGKNNNNNNNNMNONNNNNNMNONNNNNNNHMNNNNNNNNHOOONNNNNNNNNN","n":["editor","main","AllLines","CursorPos","Editor","GitIndicators","Insert","Lines","Mode","None","Normal","RefreshOrder","Rename","Resize","StatusBar","Terminate","arc_mutex","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","execute","fmt","from","from","from","get_status_bar_infos","init","init","init","init_git_thread","init_tui_thread","into","into","into","mode","open","refresh_tui","rename","run","save","signal","terminal","to_owned","to_string","toggle_mode","toggle_rename","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","view","view","Command","CommandBlock","Delete","DeleteLine","Insert","InsertNewLine","Move","Quit","Rename","Save","ToggleMode","ToggleRename","borrow","borrow_mut","deref","deref_mut","drop","eq","fmt","from","init","into","parse","parse_insert_mode","parse_insert_mode_char","parse_normal_mode","parse_rename_mode","try_from","try_into","type_id","TX","init_resize_listener","resize_handler","StatusBarInfos","TerminalDrawer","borrow","borrow_mut","clear","deref","deref_mut","draw","draw_diff_markers","draw_lines","draw_status_bar","drop","file_name","from","get_term_size","init","into","mode","move_cursor","ref_name","terminate","termion","try_from","try_into","type_id","LINE_NUMBER_WIDTH","STATUS_BAR_HEIGHT","TermionTerminalDrawer","borrow","borrow_mut","clear","deref","deref_mut","draw","draw_diff_markers","draw_line_number","draw_lines","draw_status_bar","drop","flush","from","get_term_size","init","into","move_cursor","new","print","stdout","terminate","try_from","try_into","type_id","FileView","View","borrow","borrow_mut","cursor","default","delete","delete","delete_line","delete_line","deref","deref_mut","diff","diff","drop","dump_file","dump_file","file","file","file_dir","file_dir","file_name","file_name","file_path","file_path","from","from","get_line","get_line","git_ref","git_ref","height","init","insert","insert","insert_new_line","insert_new_line","into","navigate","navigate","navigate_x","navigate_y","new","new","refresh_diff","refresh_diff","set_file_name","set_file_name","split_path_name","start_col","start_line","to_string","try_from","try_into","type_id","width","EditorFile","File","borrow","borrow_mut","content","delete","delete","delete_line","delete_line","deref","deref_mut","diff","diff","drop","file_dir","file_name","from","from_string","from_string","get_git_ref","get_git_ref","get_line","get_line","git","init","insert","insert","into","len","len","new","new","refresh_diff","refresh_diff","split_line","split_line","to_string","try_from","try_into","type_id","vcs","Added","Changed","Deleted","Git","Patch","PatchType","Vcs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compute_diff","compute_diff","count","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff","diff","diff","drop","drop","drop","fmt","from","from","from","get_diff_result","get_ref","get_ref","init","init","init","into","into","into","open","parse_diff_result","patch_type","repo","start","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"giga"],[2,"giga::editor"],[72,"giga::editor::command"],[102,"giga::editor::signal"],[105,"giga::editor::terminal"],[130,"giga::editor::terminal::termion"],[157,"giga::editor::view"],[213,"giga::editor::view::file"],[254,"giga::editor::view::file::git"],[312,"core::fmt"],[313,"core::fmt"],[314,"alloc::sync"],[315,"alloc::string"],[316,"core::option"],[317,"std::sync::mpsc"],[318,"std::sync::mpsc"],[319,"core::any"],[320,"termion::event"],[321,"libc::unix"],[322,"std::collections::hash::map"],[323,"std::collections::hash::set"],[324,"alloc::boxed"],[325,"core::error"],[326,"alloc::vec"]],"d":["Where the magic happens.","","Refresh the whole screen","Refresh the cursor position","Editor structure represents the state of the program","Refresh the git indicators","Insert mode","Refresh the given lines","Mode of the editor","No need to refresh the screen","Normal mode","","Rename mode","Refresh the screen after a resize event","Refresh the status bar","Terminate the editor","Macro to create arc mutexes quickly","","","","","","","","","Parse user input into editor commands","","","","","","","","","","Execute an editor command","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the status bar infos","","","","Initialize git operations","Initialize the tui drawing thread","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The mode of the editor","Open a file in the editor","Refresh the TUI","Rename the current file","Run the editor loop","Save the current file","Intercepting terminal resize events","Provides the terminal drawing logic","","","Toggle the mode of the editor between normal and insert","","","","","","","","","","","Portion of the file being displayed","The current view of the file","Commands that can be executed by the editor","CommandBlock","Delete a character","Delete a line","Insert a character","Insert a new line","Move the cursor by dx, dy","Quit the editor","Rename the file","Save the file","Toggle mode","Toggle rename","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Parse a command from a termion::event::Key object","Parse a command in insert mode from a termion::event::Key …","Parse a character in insert mode","Parse a command in normal mode from a termion::event::Key …","","","","","","","","Information that go in the status bar","A TerminalDrawer instance is responsible for drawing the …","","","Clear the terminal","","","(Re)Draw the whole editor","(Re)Draw the diff markers on the left of the editor","(Re)Draw only the lines that have changed","(Re)Draw the status bar","","","Returns the argument unchanged.","Get the terminal dimensions","","Calls <code>U::from(self)</code>.","","Move the cursor to the given position","","Terminate the TerminalDrawer instance (potentially cleanup …","","","","","Macro for line number width","","TermionTerminalDrawer is an implementation of the …","","","","","","","Draw the diff markers on the left of the screen","Draw the line numbers","","","","Helper funtion to flush the stdout buffer","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Macro for writing to the terminal","The raw terminal output we can write to using termion","","","","","","The View struct represents the actual portion of the File …","","","The position of the cursor in the view","","","","","","","","","","","","Dump the content of the file to save it to disk","In-memory representation of the file being edited","The file being displayed","","","","","","","","Returns the argument unchanged.","","Get the line at the given index in the view","","","The number of lines being displayed","","","Insert a character at the cursor position","","Insert a new line at the cursor position","Calls <code>U::from(self)</code>.","","Navigate the cursor by a given amount and eventually …","Navigate along the x axis and eventually scroll the view","Navigate along the y axis and eventually scroll the view","","","","","","","","The column number of the first column being displayed","The line number of the first line being displayed","","","","","The number of columns being displayed","","In-memory representation of a syntax-highlighted file","","","The content of the file","","Delete a char at the given position","","","","","","","","File path","File name","Returns the argument unchanged.","","Create a File abstraction from a string","","","","Get the nth line of the file","","","","Insert a char at the given position in the file","Calls <code>U::from(self)</code>.","","Get the number of lines in the file","","","","","","Split a line at the given position","","","","","Optional version control system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the result of the <code>diff</code> command between the current …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Parse the diff result and return a vector of Patches The …","","","","","","","","","","","","",""],"i":[0,0,6,6,0,6,2,6,0,6,2,0,2,6,6,6,0,4,6,2,4,6,2,2,2,0,4,6,2,4,6,2,4,6,2,4,2,4,6,2,4,4,6,2,4,4,4,6,2,4,4,4,4,4,4,0,0,2,2,4,4,4,6,2,4,6,2,4,6,2,0,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,14,14,25,14,14,25,25,25,25,14,14,14,25,14,14,14,25,14,25,0,14,14,14,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,0,0,18,18,18,18,30,18,30,18,18,18,30,18,18,30,18,0,18,30,18,30,18,30,18,18,18,30,18,30,18,18,18,30,18,30,18,18,30,18,18,18,30,18,30,18,30,18,0,18,18,18,18,18,18,18,0,0,34,34,34,33,34,33,34,34,34,33,34,34,34,34,34,33,34,33,34,33,34,0,34,33,34,34,33,34,33,34,33,34,33,34,34,34,34,34,34,26,26,26,0,0,0,0,38,37,26,38,37,26,26,26,36,37,38,38,37,26,38,37,26,36,37,37,38,37,26,26,38,37,26,0,36,37,38,37,26,38,37,26,37,0,38,37,38,26,38,37,26,38,37,26,38,37,26],"f":[0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],1,[],[]],0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,1],[3,1],[3,1],[[4,5],6],[[2,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[10,[[9,[2]]]],11,[13,[12]]],14],[[],3],[[],3],[[],3],[[4,[15,[6]]],1],[[4,[16,[6]]],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[11,4],[[17,18,14,6],1],[[4,[13,[19]]],1],[4,1],[4,1],0,0,[-1,-2,[],[]],[-1,12,[]],[4,1],[4,1],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[3,-1,[]],[3,-1,[]],[3,1],[[5,5],22],[[5,7],8],[-1,-1,[]],[[],3],[-1,-2,[],[]],[[23,2],[[20,[5,11]]]],[23,[[20,[5,11]]]],[19,[[20,[5,11]]]],[23,[[20,[5,11]]]],[23,[[20,[5,11]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],0,[[[15,[6]]],1],[24,1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[25,1],[3,-1,[]],[3,-1,[]],[[25,18,14],1],[[25,[27,[3,26]],18],1],[[25,18,[28,[3]]],1],[[25,14],1],[3,1],0,[-1,-1,[]],[25,[[1,[3,3]]]],[[],3],[-1,-2,[],[]],0,[[25,[1,[3,3]]],1],0,[25,1],0,[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[17,1],[3,-1,[]],[3,-1,[]],[[17,18,14],1],[[17,[27,[3,26]],18],1],[[17,3],1],[[17,18,[28,[3]]],1],[[17,14],1],[3,1],[17,1],[-1,-1,[]],[17,[[1,[3,3]]]],[[],3],[-1,-2,[],[]],[[17,[1,[3,3]]],1],[[],[[29,[17]]]],0,0,[17,1],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],18],[30,22],[18,22],[30,22],[18,22],[3,-1,[]],[3,-1,[]],[30,[[13,[[27,[3,26]]]]]],[18,[[13,[[27,[3,26]]]]]],[3,1],[30,12],[18,12],0,0,[30,12],[18,12],[30,12],[18,12],[30,12],[18,12],[12,18],[-1,-1,[]],[[30,3],12],[[18,3],12],[30,[[13,[12]]]],[18,[[13,[12]]]],0,[[],3],[[30,19],22],[[18,19],22],[30,22],[18,22],[-1,-2,[],[]],[[30,31,31],22],[[18,31,31],22],[[18,31],22],[[18,31],22],[11,30],[11,18],[30,[[20,[1,[29,[32]]]]]],[18,[[20,[1,[29,[32]]]]]],[[30,12],1],[[18,12],1],[11,[[1,[12,12,12]]]],0,0,[18,12],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[33,3,3],1],[[34,3,3],1],[[33,3],1],[[34,3],1],[3,-1,[]],[3,-1,[]],[33,[[13,[[27,[3,26]]]]]],[34,[[13,[[27,[3,26]]]]]],[3,1],0,0,[-1,-1,[]],[[11,11,11],33],[[11,11,11],34],[33,[[13,[12]]]],[34,[[13,[12]]]],[[33,3],[[13,[[35,[19]]]]]],[[34,3],[[13,[[35,[19]]]]]],0,[[],3],[[33,3,3,19],1],[[34,3,3,19],1],[-1,-2,[],[]],[33,3],[34,3],[11,33],[11,34],[33,[[20,[1,[29,[32]]]]]],[34,[[20,[1,[29,[32]]]]]],[[33,3,3],1],[[34,3,3],1],[34,12],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[[-1,-2],1,[],[]],[[36,11,11,11],[[20,[1,[29,[32]]]]]],[[37,11,11,11],[[20,[1,[29,[32]]]]]],0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[36,[[13,[[27,[3,26]]]]]],[37,[[13,[[27,[3,26]]]]]],0,[3,1],[3,1],[3,1],[[26,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[11,11,11],[[20,[12,[29,[32]]]]]],[36,12],[37,12],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[13,[37]]]],[11,[[20,[[35,[38]],[29,[32]]]]]],0,0,0,[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]]],"c":[],"p":[[1,"tuple"],[6,"Mode",2],[1,"usize"],[5,"Editor",2],[6,"Command",72],[6,"RefreshOrder",2],[5,"Formatter",312],[8,"Result",312],[5,"Mutex",313],[5,"Arc",314],[1,"str"],[5,"String",315],[6,"Option",316],[5,"StatusBarInfos",105],[5,"Sender",317],[5,"Receiver",317],[5,"TermionTerminalDrawer",130],[5,"View",157],[1,"char"],[6,"Result",318],[5,"TypeId",319],[1,"bool"],[6,"Key",320],[8,"c_int",321],[10,"TerminalDrawer",105],[6,"PatchType",254],[5,"HashMap",322],[5,"HashSet",323],[5,"Box",324],[10,"FileView",157],[1,"isize"],[10,"Error",325],[10,"EditorFile",213],[5,"File",213],[5,"Vec",326],[10,"Vcs",254],[5,"Git",254],[5,"Patch",254]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
